<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="review">


	<insert id="submitReview">
		INSERT INTO REVIEW
		(
		NO,
		CATEGORY_NO,
		SUB_CA_NO,
		PROD_NAME,
		MEMBER_NO,
		TITLE,
		CONTENT,
		SCORE,
		IS_LIKE,
		IS_UNLIKE,
		PURCHASE_DATE,
		POST_DATE,
		SHARE_COUNT,
		IS_UPDATE_YN,
		DELETE_YN,
		ATT_FILE,
		COUNT
		)
		VALUES
		(
		SEQ_REVIEW_NO.NEXTVAL,
		#{categoryNo},
		#{subCaNo},
		#{prodName},
		#{memberNo},
		#{title},
		#{content},
		#{score},
		DEFAULT,
		DEFAULT,
		#{purchaseDate},
		DEFAULT,
		DEFAULT,
		DEFAULT,
		DEFAULT,
		#{attFile},
		0
		)
	</insert>
	
	<select id="getRvoList" resultType="reviewVo">
		SELECT 
			RE.NO,
			RE.CATEGORY_NO,
			RE.SUB_CA_NO,
			RE.PROD_NAME,
			RE.MEMBER_NO,
			RE.TITLE,
			RE.CONTENT,
			RE.SCORE,
			RE.COUNT,
			RE.IS_LIKE,
			RE.IS_UNLIKE,
			RE.PURCHASE_DATE,
			TO_CHAR(RE.POST_DATE, 'YYYY-MM-DD HH24:MI') AS POST_DATE,
			RE.SHARE_COUNT,
			RE.IS_UPDATE_YN,
			RE.DELETE_YN,
			RE.ATT_FILE,
			MI.NICK,
			SD.SUB_CATEGORY
			FROM REVIEW RE
			INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
			JOIN SUBDIVISION SD ON RE.SUB_CA_NO = SD.NO
		  <choose>
		    <when test="searchType eq 'prodName'">
		      WHERE LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'title'">
		      WHERE LOWER(TITLE) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'content'">
		      WHERE LOWER(CONTENT) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'nick'">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE LOWER(MI.NICK) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'all'">
		      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%')
		      OR LOWER(MI.NICK) LIKE LOWER('%${searchValue}%') )
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC
		    </when>
		    <otherwise>
		     WHERE RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC
		    </otherwise>
		  </choose>
	</select>
	
		<select id="getCnt" resultType="int">
		  SELECT COUNT (RE.NO)
		  FROM REVIEW RE
		  <choose>
		    <when test="searchType eq 'prodName'">
		      WHERE LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'title'">
		      WHERE LOWER(TITLE) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'content'">
		      WHERE LOWER(CONTENT) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'nick'">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE LOWER(MI.NICK) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'all'">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%'
		      OR LOWER(MI.NICK) LIKE LOWER('%${searchValue}%'))
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <otherwise>
		     WHERE RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </otherwise>
		  </choose>
		</select>
		
		<select id="getDetail" resultType="reviewVo">
			SELECT 
				RE.NO,
				RE.CATEGORY_NO,
				RE.SUB_CA_NO,
				RE.PROD_NAME,
				RE.MEMBER_NO,
				MI.NICK,
				MI.PROFILE,
				SD.SUB_CATEGORY,
				RE.TITLE,
				RE.CONTENT,
				RE.SCORE,
				RE.IS_LIKE,
				RE.IS_UNLIKE,
				TO_CHAR(PURCHASE_DATE, 'YYYY-MM-DD') AS PURCHASE_DATE,
				TO_CHAR(POST_DATE, 'YYYY-MM-DD HH24:MI') AS POST_DATE,
				RE.SHARE_COUNT,
				RE.IS_UPDATE_YN,
				RE.DELETE_YN,
				RE.ATT_FILE,
				RE.COUNT,
				MI.PROFILE
			FROM REVIEW RE
			JOIN MEMBER_INFO MI
			ON RE.MEMBER_NO = MI.NO 
			JOIN SUBDIVISION SD 
			ON RE.SUB_CA_NO = SD.NO
			WHERE RE.NO = #{no} AND RE.DELETE_YN = 'N'
		</select>
		<update id="growCnt">
			UPDATE REVIEW
			SET
			COUNT = COUNT +1
			WHERE NO = #{no}
		</update>
		<insert id="likeManage">
			INSERT INTO REVIEW_LIKE
			(
			LIKENO
			,MEMBER_NO
			,REVIEW_NO
			,LIKE_STATUS
			,CLICK_TIME
			)
			VALUES
			(
			SEQ_REVIEW_LIKE_NO.NEXTVAL
			, #{memberNo}
			, #{no}
			, 'L'
			, SYSDATE
			)
		</insert>
		
</mapper>
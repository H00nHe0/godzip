<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="review">


	<select id="recentReview" resultType="ReviewVo">
    <![CDATA[
    SELECT ROWNUM AS RNO, T.*
    FROM (
        SELECT
            RE.NO,
            RE.CATEGORY_NO,
            RE.SUB_CA_NO,
            RE.PROD_NAME,
            RE.MEMBER_NO,
            RE.TITLE,
            RE.CONTENT,
            RE.SCORE,
            RE.IS_LIKE,
            RE.PURCHASE_DATE,
            RE.ATT_FILE,
            RE.POST_DATE,
            RE.COMM_COUNT,
            RE.IS_UPDATE_YN,
            RE.DELETE_YN,
            RE.COUNT,
            MI.NICK,
            MI.PROFILE
        FROM REVIEW RE
        JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
        ORDER BY RE.NO DESC
    ) T
    WHERE ROWNUM <= 10
    ]]>
	</select>
	<insert id="submitReview">
		INSERT INTO REVIEW
		(
		NO,
		CATEGORY_NO,
		SUB_CA_NO,
		PROD_NAME,
		MEMBER_NO,
		TITLE,
		CONTENT,
		SCORE,
		IS_LIKE,
		PURCHASE_DATE,
		POST_DATE,
		COMM_COUNT,
		IS_UPDATE_YN,
		DELETE_YN,
		ATT_FILE,
		COUNT
		)
		VALUES
		(
		SEQ_REVIEW_NO.NEXTVAL,
		#{categoryNo},
		#{subCaNo},
		#{prodName},
		#{memberNo},
		#{title},
		#{content},
		#{score},
		DEFAULT,
		#{purchaseDate},
		DEFAULT,
		DEFAULT,
		DEFAULT,
		DEFAULT,
		#{attFile},
		0
		)
	</insert>
	
	<select id="getRvoList" resultType="reviewVo">
		SELECT ROWNUM AS RNO, T.*
			FROM
				(SELECT 
					RE.NO,
					RE.CATEGORY_NO,
					RE.SUB_CA_NO,
					RE.PROD_NAME,
					RE.MEMBER_NO,
					RE.TITLE,
					RE.CONTENT,
					RE.SCORE,
					RE.COUNT,
					RE.IS_LIKE,
					RE.PURCHASE_DATE,
					TO_CHAR(RE.POST_DATE, 'YYYY-MM-DD HH24:MI') AS POST_DATE,
					RE.COMM_COUNT,
					RE.IS_UPDATE_YN,
					RE.DELETE_YN,
					RE.ATT_FILE,
					MI.NICK,
					SD.SUB_CATEGORY
					FROM REVIEW RE
					INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
					JOIN SUBDIVISION SD ON RE.SUB_CA_NO = SD.NO
				  <choose>
				    <when test="searchType eq 'prodName'">
				      WHERE LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test="searchType eq 'title'">
				      WHERE LOWER(TITLE) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test="searchType eq 'content'">
				      WHERE LOWER(CONTENT) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test="searchType eq 'nick'">
				      WHERE LOWER(MI.NICK) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test="searchType eq 'all'">
				      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
				      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
				      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%')
				      OR LOWER(MI.NICK) LIKE LOWER('%${searchValue}%') )
				      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC) T
				    </when>
				    <otherwise>
				     WHERE RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo} ORDER BY RE.NO DESC) T
				    </otherwise>
				  </choose>
	</select>
		<select id="searchList" resultType="reviewVo">
			SELECT ROWNUM AS RNO, T.*
				FROM
					(SELECT 
					RE.NO,
					RE.CATEGORY_NO,
					RE.SUB_CA_NO,
					RE.PROD_NAME,
					RE.MEMBER_NO,
					RE.TITLE,
					RE.CONTENT,
					RE.SCORE,
					RE.COUNT,
					RE.IS_LIKE,
					RE.PURCHASE_DATE,
					TO_CHAR(RE.POST_DATE, 'YYYY-MM-DD HH24:MI') AS POST_DATE,
					RE.COMM_COUNT,
					RE.IS_UPDATE_YN,
					RE.DELETE_YN,
					RE.ATT_FILE,
					MI.NICK,
					SD.SUB_CATEGORY
					FROM REVIEW RE
					INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
					JOIN SUBDIVISION SD ON RE.SUB_CA_NO = SD.NO
	    			<if test="searchValue != null">		
				      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
				      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
				      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%')
				      OR LOWER(MI.NICK) LIKE LOWER('%${searchValue}%') )
				      AND RE.DELETE_YN = 'N' ORDER BY RE.NO DESC) T
		    		</if>
		    		<if test="searchValue == null">
				     WHERE RE.DELETE_YN = 'N' ORDER BY RE.NO DESC) T
					</if>
		</select>
	
		<select id="getCnt" resultType="int">
		  SELECT COUNT (RE.NO)
		  FROM REVIEW RE
		  <choose>
		    <when test="searchType eq 'prodName'">
		      WHERE LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'title'">
		      WHERE LOWER(TITLE) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'content'">
		      WHERE LOWER(CONTENT) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'nick'">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE LOWER(MI.NICK) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <when test="searchType eq 'all'">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%')
		      OR LOWER(MI.NICK) LIKE LOWER('%${searchValue}%'))
		      AND RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </when>
		    <otherwise>
		     WHERE RE.DELETE_YN = 'N' AND RE.SUB_CA_NO = #{subCaNo}
		    </otherwise>
		  </choose>
		</select>
		<select id="getTotalCnt" resultType="int">
		  SELECT COUNT (RE.NO)
		  FROM REVIEW RE
		    <if test="searchValue != null">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%')
		      OR LOWER(MI.NICK) LIKE LOWER('%${searchValue}%'))
		      AND RE.DELETE_YN = 'N'
		    </if>
		    <if test="searchValue == null">
		     WHERE RE.DELETE_YN = 'N'
		    </if>
		</select>
		
		<select id="getMyReviewCnt" resultType="int">
		  SELECT COUNT (RE.NO)
		  FROM REVIEW RE
		  <choose>
		    <when test="searchType eq 'prodName'">
		      WHERE LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'title'">
		      WHERE LOWER(TITLE) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'content'">
		      WHERE LOWER(CONTENT) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'nick'">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE LOWER(MI.NICK) LIKE LOWER('%${searchValue}%')
		      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC
		    </when>
		    <when test="searchType eq 'all'">
		      INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
		      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
		      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%')
		      OR LOWER(MI.NICK) LIKE LOWER('%${searchValue}%'))
		      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC
		    </when>
		    <otherwise>
		     WHERE RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC
		    </otherwise>
		  </choose>
		</select>
		
		<select id="getDetail" resultType="reviewVo">
			SELECT 
				RE.NO,
				RE.CATEGORY_NO,
				RE.SUB_CA_NO,
				RE.PROD_NAME,
				RE.MEMBER_NO,
				MI.NICK,
				MI.PROFILE,
				SD.SUB_CATEGORY,
				RE.TITLE,
				RE.CONTENT,
				RE.SCORE,
				RE.IS_LIKE,
				TO_CHAR(PURCHASE_DATE, 'YYYY-MM-DD') AS PURCHASE_DATE,
				TO_CHAR(POST_DATE, 'YYYY-MM-DD HH24:MI') AS POST_DATE,
				RE.COMM_COUNT,
				RE.IS_UPDATE_YN,
				RE.DELETE_YN,
				RE.ATT_FILE,
				RE.COUNT,
				MI.PROFILE
			FROM REVIEW RE
			JOIN MEMBER_INFO MI
			ON RE.MEMBER_NO = MI.NO 
			JOIN SUBDIVISION SD 
			ON RE.SUB_CA_NO = SD.NO
			WHERE RE.NO = #{no} AND RE.DELETE_YN = 'N'
		</select>
		<update id="growCnt">
			UPDATE REVIEW
			SET
			COUNT = COUNT +1
			WHERE NO = #{no}
		</update>
		<insert id="likeManage">
			INSERT INTO REVIEW_LIKE
			(
			LIKENO
			,MEMBER_NO
			,REVIEW_NO
			,CLICK_TIME
			)
			VALUES
			(
			SEQ_REVIEW_LIKE_NO.NEXTVAL
			, #{memberNo}
			, #{no}
			, SYSDATE
			)
		</insert>
		<update id="addLike">
			UPDATE REVIEW
			SET
			IS_LIKE = IS_LIKE + 1
			WHERE NO = #{no}
		</update>
		<update id="downLike">
			UPDATE REVIEW
			SET
			IS_LIKE = IS_LIKE - 1
			WHERE NO = #{no}
		</update>
		<delete id="cancelLike">
			DELETE FROM REVIEW_LIKE WHERE MEMBER_NO = #{memberNo} AND REVIEW_NO = #{no}
		</delete>
		<select id="likeChk" resultType="int">
			SELECT COUNT(LIKENO) FROM REVIEW_LIKE WHERE REVIEW_NO = #{no} AND MEMBER_NO = #{memberNo}
		</select>
		<insert id="insertComment">
			INSERT INTO COMM
			(
			NO
			,REVIEW_NO
			,MEMBER_NO
			,CONTENT
			,POST_DATE
			,IS_UPDATE_YN
			)
			VALUES
			(
			SEQ_COMM_NO.NEXTVAL
			,#{reviewNo}
			,#{memberNo}
			,#{content}
			,SYSDATE
			,DEFAULT
			)
		</insert>
		<select id="getClist" resultType="commentVo">
			SELECT
			CO.NO,
			CO.REVIEW_NO,
			CO.MEMBER_NO,
			CO.CONTENT,
			TO_CHAR(CO.POST_DATE, 'YYYY-MM-DD HH24:MI') AS POST_DATE,
			CO.IS_UPDATE_YN,
			MI.NICK  
			FROM COMM CO JOIN MEMBER_INFO MI ON CO.MEMBER_NO = MI.NO
			WHERE REVIEW_NO = #{reviewNo} ORDER BY NO DESC
		</select>
		<update id="growCommCnt">
			UPDATE REVIEW
			SET
			COMM_COUNT = COMM_COUNT+1
			WHERE NO = #{reviewNo}
		</update>
		<select id="selectCommCnt" resultType="int">
			SELECT COMM_COUNT FROM REVIEW WHERE NO = #{reviewNo}
		</select>
		
		<select id="myReviewList" resultType="reviewVo">
		SELECT ROWNUM AS RNO, T.*
			FROM
				(SELECT 
					RE.NO,
					RE.CATEGORY_NO,
					RE.SUB_CA_NO,
					RE.PROD_NAME,
					RE.MEMBER_NO,
					RE.TITLE,
					RE.CONTENT,
					RE.SCORE,
					RE.COUNT,
					RE.IS_LIKE,
					RE.PURCHASE_DATE,
					TO_CHAR(RE.POST_DATE, 'YYYY-MM-DD HH24:MI') AS POST_DATE,
					RE.COMM_COUNT,
					RE.IS_UPDATE_YN,
					RE.DELETE_YN,
					RE.ATT_FILE,
					MI.NICK,
					SD.SUB_CATEGORY
					FROM REVIEW RE
					INNER JOIN MEMBER_INFO MI ON RE.MEMBER_NO = MI.NO
					JOIN SUBDIVISION SD ON RE.SUB_CA_NO = SD.NO					
				  <choose>
				    <when test='searchType eq "prodName"'>
				      WHERE LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test='searchType eq "title"'>
				      WHERE LOWER(TITLE) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test="searchType eq 'content'">
				      WHERE LOWER(CONTENT) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test="searchType eq 'subCategory'">
				      WHERE LOWER(SD.SUB_CATEGORY) LIKE LOWER('%${searchValue}%')
				      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC) T
				    </when>
				    <when test="searchType eq 'all'">
				      WHERE ( LOWER(PROD_NAME) LIKE LOWER('%${searchValue}%')
				      OR LOWER(RE.TITLE) LIKE LOWER('%${searchValue}%')
				      OR LOWER(RE.CONTENT) LIKE LOWER('%${searchValue}%')
				      OR LOWER(SD.SUB_CATEGORY) LIKE LOWER('%${searchValue}%'))
				      AND RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC) T
				    </when>
				    <otherwise>
				     WHERE RE.DELETE_YN = 'N' AND RE.MEMBER_NO = #{memberNo} ORDER BY RE.NO DESC) T
				    </otherwise>
				  </choose>
			</select>
			
			<delete id="deleteReview">
				DELETE FROM REVIEW WHERE NO = #{reviewNo}
			</delete>
			
			<update id="editReview">
				UPDATE REVIEW 
				SET 
				CATEGORY_NO = #{categoryNo} 
				, SUB_CA_NO = #{subCaNo} 
				, PROD_NAME = #{prodName} 
				, TITLE = #{title} 
				, CONTENT = #{content} 
				, PURCHASE_DATE = #{purchaseDate} 
				, IS_UPDATE_YN = 'Y'  
				, ATT_FILE = #{attFile}
				WHERE NO = #{no}
			</update>
</mapper>